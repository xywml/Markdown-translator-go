name: Build, Translate, and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*' 
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matbbb:
        goos: [windows, linux]
        goarch: [amd64]
    outputs: 
      binary_name: Markdown-translator-go-app-${{ matbbb.goos }}-${{ matbbb.goarch }}$(if eq(matbbb.goos, 'windows'); then echo '.exe'; fi)
      artifact_name: Markdown-translator-go-app-${{ matbbb.goos }}-${{ matbbb.goarch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Go
        uses: actions/setup-go@v5 
        with:
          go-version: '1.21' 

      - name: Build
        run: |
          
          BINARY_NAME="Markdown-translator-go-app-${{ matbbb.goos }}-${{ matbbb.goarch }}"
          if [[ "${{ matbbb.goos }}" == "windows" ]]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Building: $BINARY_NAME"
         
          GOOS=${{ matbbb.goos }} GOARCH=${{ matbbb.goarch }} go build -o "$BINARY_NAME" .


      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4 æœ¬
        with:
          name: ${{ steps.build.outputs.artifact_name }} 
          path: ${{ steps.build.outputs.binary_name }} 
          retention-days: 1 

  translate:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      

      - name: Download Linux Binary Artifact
        uses: actions/download-artifact@v4 
        with:
          name: Markdown-translator-go-app-linux-amd64 
          path: . 



      - name: Set Execute Permissions
        run: chmod +x ./Markdown-translator-go-app-linux-amd64

      - name: Translate Markdown
        env:
          MK_TRANSLATOR_API_KEY: ${{ secrets.MK_TRANSLATOR_API_KEY }} 
        run: |
          ./Markdown-translator-go-app-linux-amd64 \
            --source ./pages \      
            --target ./pages.zh \  #
            --provider openai \
            --model "gpt-4o-mini" \
            --concurrency 5 \
            --overwrite

      

      - name: Archive Translated Files
        run: |
          
          tar -czvf translated-pages.tar.gz ./pages.zh

      - name: Upload Translation Artifact
        uses: actions/upload-artifact@v4
        with:
          name: translated-pages
          path: translated-pages.tar.gz
          retention-days: 1

  release:
    needs: [build, translate] 
    runs-on: ubuntu-latest
    permissions: 
      contents: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts 

      - name: List downloaded artifacts (for debugging)
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2 
        with:

          files: |
            artifacts/Markdown-translator-go-app-windows-amd64/Markdown-translator-go-app-windows-amd64.exe
            artifacts/Markdown-translator-go-app-linux-amd64/Markdown-translator-go-app-linux-amd64
            artifacts/translated-pages/translated-pages.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
